BANGLIU-MB0:data_loader bangliu$ python3 test_data_utils.py 
Start loading constants ...
Finished loading constants ...
Better speed can be achieved with apex installed from https://www.github.com/nvidia/apex.
[1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
.
START: get_clue_ids_with_input_copied_hard_soft
[0. 1. 1. 1. 0. 0. 0. 0. 1.]
END: get_clue_ids_with_input_copied_hard_soft

..
START: get_copy_labels
(array([10,  4,  1,  0, 11, 12, 13,  6, 14, 11,  0,  0,  0,  0,  0],
      dtype=int32), array([0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], dtype=int32), array([0, 4, 1, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0], dtype=int32), array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32), array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32), array([0, 0, 0, 0, 2, 2, 3, 0, 2, 2, 0, 0, 0, 0, 0], dtype=int32), array([0, 0, 0, 0, 5, 1, 1, 0, 7, 5, 0, 0, 0, 0, 0], dtype=int32), array([1, 3, 0, 0, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0], dtype=int32))
END: get_copy_labels

..
START: test_get_related_words
{'all_word_forms': ['bigness', 'bignesses', 'big'], 'synonyms': ['expectant', 'with_child', 'magnanimous', 'full-grown', 'openhanded', 'enceinte', 'grownup', 'gravid', 'grown', 'freehanded', 'adult', 'bad', 'heavy', 'boastful', 'liberal', 'handsome', 'large', 'braggy', 'fully_grown', 'swelled', 'self-aggrandizing', 'prominent', 'cock-a-hoop', 'bountiful', 'bragging', 'vainglorious', 'boastfully', 'crowing', 'braggart', 'bighearted', 'vauntingly', 'bounteous', 'giving', 'big', 'great', 'self-aggrandising'], 'antonyms': ['little', 'small'], 'semantic_related': ['huge', 'bigger', 'biggest', 'massive', 'large', 'enormous', 'little', 'gigantic', 'hard', 'giant']}
{'all_word_forms': ['smalls', 'smallnesses', 'smallness', 'small'], 'synonyms': ['lowly', 'minuscule', 'pocket-size', 'humble', 'belittled', 'little', 'modest', 'diminished', 'small-scale', 'minor', 'low', 'pocket-sized', 'small'], 'antonyms': ['large', 'big'], 'semantic_related': ['Large', 'Medium', 'Tiny', 'Smaller', 'small', 'Sized', 'Size', 'SMALL', 'Business', 'Big']}
{'all_word_forms': ['smalls', 'smallnesses', 'smallness', 'small'], 'synonyms': ['lowly', 'minuscule', 'pocket-size', 'humble', 'belittled', 'little', 'modest', 'diminished', 'small-scale', 'minor', 'low', 'pocket-sized', 'small'], 'antonyms': ['large', 'big'], 'semantic_related': ['large', 'tiny', 'smaller', 'little', 'larger', 'sized', 'big', 'medium-sized', 'smallish', 'few']}
{'all_word_forms': ['smalls', 'smallnesses', 'smallness', 'small'], 'synonyms': ['lowly', 'minuscule', 'pocket-size', 'humble', 'belittled', 'little', 'modest', 'diminished', 'small-scale', 'minor', 'low', 'pocket-sized', 'small'], 'antonyms': ['large', 'big'], 'semantic_related': ['large', 'tiny', 'smaller', 'little', 'larger', 'sized', 'big', 'medium-sized', 'smallish', 'few']}
{'all_word_forms': [], 'synonyms': [], 'antonyms': [], 'semantic_related': []}
END: test_get_related_words

.
START: test_get_related_words_dict
start get related words dict
0
1
2
3
4
end get related words dict
{'how': {'all_word_forms': [], 'synonyms': [], 'antonyms': [], 'semantic_related': ['what', 'why', 'understand', 'know', 'explain', 'tell', 'that', 'really', 'think', 'way']}, 'a': {'all_word_forms': ['a', 'as'], 'synonyms': ['antiophthalmic_factor', 'adenine', 'ampere', 'angstrom', 'vitamin_A', 'type_A', 'deoxyadenosine_monophosphate', 'amp', 'A', 'axerophthol', 'angstrom_unit', 'group_A', 'a'], 'antonyms': [], 'semantic_related': ['another', 'one', 'an', 'is', 'kind', 'first', 'A', 'the', 'second', 'something']}, 'big': {'all_word_forms': ['bigness', 'bignesses', 'big'], 'synonyms': ['expectant', 'with_child', 'magnanimous', 'full-grown', 'openhanded', 'enceinte', 'grownup', 'gravid', 'grown', 'freehanded', 'adult', 'bad', 'heavy', 'boastful', 'liberal', 'handsome', 'large', 'braggy', 'fully_grown', 'swelled', 'self-aggrandizing', 'prominent', 'cock-a-hoop', 'bountiful', 'bragging', 'vainglorious', 'boastfully', 'crowing', 'braggart', 'bighearted', 'vauntingly', 'bounteous', 'giving', 'big', 'great', 'self-aggrandising'], 'antonyms': ['little', 'small'], 'semantic_related': ['huge', 'bigger', 'biggest', 'massive', 'large', 'enormous', 'little', 'gigantic', 'hard', 'giant']}, 'small': {'all_word_forms': ['smalls', 'smallnesses', 'smallness', 'small'], 'synonyms': ['lowly', 'minuscule', 'pocket-size', 'humble', 'belittled', 'little', 'modest', 'diminished', 'small-scale', 'minor', 'low', 'pocket-sized', 'small'], 'antonyms': ['large', 'big'], 'semantic_related': ['large', 'tiny', 'smaller', 'little', 'larger', 'sized', 'big', 'medium-sized', 'smallish', 'few']}, 'Happy': {'all_word_forms': ['happy', 'happiness', 'happily', 'happinesses'], 'synonyms': ['happy', 'well-chosen', 'felicitous', 'glad'], 'antonyms': ['unhappy'], 'semantic_related': ['Birthday', 'Merry', 'Wishes', 'Valentines', 'Christmas', 'Greetings', 'Valentine', 'birthday', 'Wishing', 'HAPPY']}}
END: test_get_related_words_dict

.
START: test_get_related_words_ids_mat
[[0, -1, -1, -1, -1, -1, -1, -1, -1, -1], [1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [2, -1, -1, -1, -1, -1, -1, -1, -1, -1], [3, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [6, -1, -1, -1, -1, -1, -1, -1, -1, -1]]
END: test_get_related_words_ids_mat

.
START: get_related_words_ids_mat_with_related_words_dict
[[0, -1, -1], [1, -1, -1], [2, -1, -1], [3, -1, -1], [5, 6, 7], [4, 6, 7], [4, 5, 7], [4, 5, 6]]
END: get_related_words_ids_mat_with_related_words_dict

..
----------------------------------------------------------------------
Ran 10 tests in 41.840s

OK